// Code generated by protoc-gen-go. DO NOT EDIT.
// source: poc.proto

/*
Package poc is a generated protocol buffer package.

It is generated from these files:
	poc.proto

It has these top-level messages:
	Req
	Rep
*/
package poc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Req struct {
}

func (m *Req) Reset()                    { *m = Req{} }
func (m *Req) String() string            { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()               {}
func (*Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Rep struct {
}

func (m *Rep) Reset()                    { *m = Rep{} }
func (m *Rep) String() string            { return proto.CompactTextString(m) }
func (*Rep) ProtoMessage()               {}
func (*Rep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Req)(nil), "poc.Req")
	proto.RegisterType((*Rep)(nil), "poc.Rep")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Poc service

type PocClient interface {
	Hey(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Rep, error)
}

type pocClient struct {
	cc *grpc.ClientConn
}

func NewPocClient(cc *grpc.ClientConn) PocClient {
	return &pocClient{cc}
}

func (c *pocClient) Hey(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Rep, error) {
	out := new(Rep)
	err := grpc.Invoke(ctx, "/poc.Poc/Hey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Poc service

type PocServer interface {
	Hey(context.Context, *Req) (*Rep, error)
}

func RegisterPocServer(s *grpc.Server, srv PocServer) {
	s.RegisterService(&_Poc_serviceDesc, srv)
}

func _Poc_Hey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PocServer).Hey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poc.Poc/Hey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PocServer).Hey(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _Poc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "poc.Poc",
	HandlerType: (*PocServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hey",
			Handler:    _Poc_Hey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "poc.proto",
}

func init() { proto.RegisterFile("poc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 82 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0xc8, 0x4f, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0xc8, 0x4f, 0x56, 0x62, 0xe5, 0x62, 0x0e, 0x4a,
	0x2d, 0x84, 0x50, 0x05, 0x46, 0x4a, 0x5c, 0xcc, 0x01, 0xf9, 0xc9, 0x42, 0xd2, 0x5c, 0xcc, 0x1e,
	0xa9, 0x95, 0x42, 0x1c, 0x7a, 0x20, 0xc5, 0x41, 0xa9, 0x85, 0x52, 0x30, 0x56, 0x81, 0x12, 0x43,
	0x12, 0x1b, 0x58, 0xb7, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x8c, 0x18, 0xcd, 0x4a, 0x00,
	0x00, 0x00,
}
